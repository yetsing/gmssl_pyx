name: Build and upload to PyPI

# Build on every branch push, tag push, and pull request change:
on: [push, pull_request]
# Alternatively, to publish when a (published) GitHub Release is created, use the following:
# on:
#   push:
#   pull_request:
#   release:
#     types:
#       - published

jobs:
  build_wheels:
    name: Build wheel for cp${{ matrix.python }}-${{ matrix.platform_id }}-${{ matrix.manylinux_image }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Window 64 bit
          # Note: windows-2019 is needed for older Python versions:
          # https://github.com/scikit-learn/scikit-learn/issues/22530
          - os: windows-2019
            python: 37
            platform_id: win_amd64

          # Linux 64 bit manylinux
          - os: ubuntu-20.04
            python: 37
            platform_id: manylinux_x86_64
            manylinux_image: manylinux1

          # MacOS x86_64
          - os: macos-11
            python: 37
            platform_id: macosx_x86_64

    steps:
      - uses: actions/checkout@v3

      - name: Build and test wheels
        uses: pypa/cibuildwheel@v2.12.3
        env:
          CIBW_BUILD: cp${{ matrix.python }}-${{ matrix.platform_id }}
          CIBW_TEST_COMMAND: python -m unittest discover {project}/tests

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v'
#    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    # alternatively, to publish when a GitHub Release is created, use the following rule:
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v3
        with:
          # unpacks default artifact into dist/
          # if `name: artifact` is omitted, the action will create extra parent dir
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
          # password: ${{ secrets.test_pypi_password }}
          # To test
          # repository_url: https://test.pypi.org/legacy/